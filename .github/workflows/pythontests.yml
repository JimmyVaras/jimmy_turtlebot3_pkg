name: Python Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest  # Aún necesitamos un runner para Docker, pero no necesita ser Ubuntu 20.04

    container:
      image: osrf/ros:noetic-desktop-full  # Usamos la imagen oficial con ROS Noetic
      options: --gpus all  # Solo si necesitas acceder a GPUs (opcional)

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install pip
      run: |
        curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
        python3 get-pip.py  # Esto instalará pip para Python 3

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install coverage
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Set up ROS environment
      run: |
        source /opt/ros/noetic/setup.bash  # Configura el entorno de ROS
        echo "source /opt/ros/noetic/setup.bash" >> ~/.bashrc  # Hace persistente la configuración
        
    - name: Run tests with coverage
      run: |
        source /opt/ros/noetic/setup.bash
        python -m coverage run -m unittest discover
        python -m coverage report
