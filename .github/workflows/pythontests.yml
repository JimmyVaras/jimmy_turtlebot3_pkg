name: Python Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.8"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install coverage
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Install ROS
      run: |
        sudo apt update
        sudo apt install -y curl
        curl -sSL 'http://repo.ros2.org/repos.key' | sudo apt-key add -
        sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
        sudo apt update
        sudo apt install -y ros-noetic-rostest ros-noetic-ros-base
        echo "source /opt/ros/noetic/setup.bash" >> ~/.bashrc
        source ~/.bashrc
    
    - name: Run tests with coverage
      run: |
        source /opt/ros/noetic/setup.bash
        python -m coverage run -m unittest discover
        python -m coverage report
